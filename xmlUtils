package com.automation.reporting.xmltest;

import org.testng.annotations.Test;
import org.w3c.dom.*;
import org.xml.sax.InputSource;

import javax.print.Doc;
import javax.xml.parsers.*;
import java.io.File;
import java.io.StringReader;
import java.io.StringWriter;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.xml.transform.*;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;

public class NodeListToString {

        @Test
        public void testNodeXML() {

            try {
                // read xml file as Document
               /* String fpath= Paths.get("src/test/resources/xmlfiles/test1.xml").toString();
                Document document = readXmlAsDocument(fpath);
                */

                // read xml file as string
                String xmlString = new String(Files.readAllBytes(Paths.get("src/test/resources/xmlfiles/test1.xml")));

                // stringXML to doc
                Document document = StringToDocument(xmlString);

                // get NodeList by tagName
                NodeList nodeList = document.getElementsByTagName("staff");

                // Convert NodeList to a single XML string
                String nodeListString = nodeListToString(nodeList);
                //System.out.println(nodeListString);

                //createXMLFormat as per project xml
                String xmlDoc = createXMLFormat(nodeListString);
                System.out.println(xmlDoc);

            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        String createXMLFormat(String nodeListStr){
            StringBuilder sbXML = new StringBuilder();
            sbXML.append("<company>");
            sbXML.append(nodeListStr);
            sbXML.append("</company>");
            return sbXML.toString();
        }

        public String nodeListToString(NodeList nodeList) throws TransformerException {
            StringBuilder stringBuilder = new StringBuilder();
            // Serialize each node in the NodeList to a string and append to the StringBuilder
            for (int i = 0; i < nodeList.getLength(); i++) {
                Node node = nodeList.item(i);
                StringWriter stringWriter = new StringWriter();
                TransformerFactory transformerFactory = TransformerFactory.newInstance();
                Transformer transformer = transformerFactory.newTransformer();
                transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, "yes");
                transformer.transform(new DOMSource(node), new StreamResult(stringWriter));
                stringBuilder.append(stringWriter.toString());
            }
            return stringBuilder.toString();
        }

    public static Document StringToDocument(String strXml) throws Exception {
        Document doc ;
        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            StringReader strReader = new StringReader(strXml);
            InputSource is = new InputSource(strReader);
            doc = builder.parse(is);
        } catch (Exception e) {
            e.printStackTrace();
            throw e;
        }
        return doc;
    }

    public static String DocumentToString(Document doc) throws Exception {
        TransformerFactory tf = TransformerFactory.newInstance();
        Transformer transformer = tf.newTransformer();
        transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, "yes");
        StringWriter writer = new StringWriter();
        transformer.transform(new DOMSource(doc), new StreamResult(writer));
        String output = writer.getBuffer().toString();
        return output;
    }

    Document readXmlAsDocument(String path) throws Exception{
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document document = builder.parse(new File(Paths.get("src/test/resources/xmlfiles/test1.xml").toString()));
            return document;
    }
    }
